<!DOCTYPE html>
<html>
<head>
<title>Need for Cognition Scale</title>
<style>
  body {
    font-family: sans-serif;
  }
  .question {
    margin-bottom: 1em;
  }
  .likert-scale {
    display: flex;
    justify-content: space-between;
    list-style-type: none;
    padding: 0;
  }
  .likert-item {
    text-align: center;
  }
</style>
</head>
<body>

<h1>Need for Cognition Scale</h1>

<div id="questions-container"></div>

<button id="submit-button">Submit</button>

<script>
  // Function to parse the data from OS.txt
  async function parseOSData() {
    const response = await fetch('OS.txt');
    const text = await response.text();
    const lines = text.split('\n');
    const questions = [];
    for (let i = 0; i < lines.length; i++) {
      const line = lines[i];
      if (line.startsWith('setcycle')) {
        const parts = line.split(' ');
        const cycle = parseInt(parts[1]);
        const key = parts[2];
        const value = parts.slice(3).join(' ').replace(/"/g, '');
        if (key === 'Question') {
          if (!questions[cycle]) {
            questions[cycle] = {};
          }
          questions[cycle].question = value;
        } else if (key === 'score') {
          if (!questions[cycle]) {
            questions[cycle] = {};
          }
          questions[cycle].score = value;
        }
      }
    }
    return questions;
  }

  // Function to generate the HTML for the questions
  function generateQuestionsHTML(questions) {
    const container = document.getElementById('questions-container');
    for (let i = 0; i < questions.length; i++) {
      const question = questions[i];
      if (question) {
        const questionDiv = document.createElement('div');
        questionDiv.classList.add('question');
        questionDiv.innerHTML = "`
          <p>${i + 1}. ${question.question}</p>
          <ul class=\"likert-scale\">
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"0\"> Very Inaccurate</li>
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"1\"></li>
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"2\"></li>
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"3\"></li>
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"4\"></li>
            <li class=\"likert-item\"><input type=\"radio\" name=\"q${i}\" value=\"5\"> Very Accurate</li>
          </ul>
        ";
        container.appendChild(questionDiv);
      }
    }
  }

  // Function to calculate the score
  function calculateScore(questions) {
    let totalScore = 0;
    for (let i = 0; i < questions.length; i++) {
      const question = questions[i];
      if (question) {
        const selectedValue = document.querySelector(`input[name="q${i}"]:checked`);
        if (selectedValue) {
          let score = parseInt(selectedValue.value);
          if (question.score === 'r') {
            score = 5 - score;
          }
          totalScore += score;
        }
      }
    }
    return totalScore;
  }

  // Main function
  async function main() {
    const questions = await parseOSData();
    generateQuestionsHTML(questions);

    const submitButton = document.getElementById('submit-button');
    submitButton.addEventListener('click', () => {
      const totalScore = calculateScore(questions);
      // Save the score to JATOS
      // jatos.appendResultData(totalScore);
      alert(`Your score is: ${totalScore}`);
    });
  }

  main();
</script>

</body>
</html>
